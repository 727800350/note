#!/usr/bin/env expect

proc getConfig {configFile Key {Comment "#"} {Equal "="}} {
    set Value "" 
    set err [catch {set fileid [open $configFile r]} errMsg] 
    if {$err == 1} { 
        puts "errMsg : $errMsg" 
        return $Value 
    } 
    set rowid 0
    while {[eof $fileid] != 1} {
        incr rowid
        gets $fileid line
        set commentpos [string first $Comment $line]
        #puts "rowid $rowid : line $line : commentpos $commentpos : fileid $fileid"
        if { $commentpos == 0 } {
            continue
        }
        if { $commentpos != -1 } {
            set line [string range $line 0 [expr $commentpos-1]]
        }
        set line [string trim $line]
        if { $line == "" } {
            continue
        } else {
            set equalpos [string first $Equal $line]
            #puts "equalpos $equalpos"
            if { $equalpos != -1} {
                if { [string range $line 0 [expr $equalpos - 1]] == $Key } {
                    set Value [string range $line [expr $equalpos + 1] [string length $line]]
                    break
                }
                #puts [string range $line 0 [expr $equalpos - 1]]
            }
        } 
    } 
    close $fileid 
    #puts "return $Value"
    return $Value 
} 


set timeout 1
set pconf "/home/work/goto/goto/pass.conf"
set sshhost [lindex $argv 1]
set sshkey [lindex $argv 0]

set val_key "$sshkey-user"
set val_pwd "$sshkey-password"

set sshuser [getConfig $pconf $val_key]
set sshpwd [getConfig $pconf $val_pwd]

spawn ssh $sshuser@$sshhost

expect {
	"Are you sure you want to continue connecting (yes/no)?" {
		exp_send "yes\r"
		exp_continue
	}
	"password:" {
		exp_send -- "$sshpwd\r"
	}
}

expect eof
interact
